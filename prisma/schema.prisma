// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Quotes {
  id  Int @id @default (autoincrement())
  opentime DateTime
  ticker String @db.VarChar(255)
  price Float
  isCandle Boolean @default(false)
  timeframe Int @default(1)
  priceO Float
  priceH Float
  priceL Float
  priceC Float
  volume Float
  fetchedAt DateTime @default (now()) // use this to purge very old data

  @@index (ticker)
  @@unique([ticker, opentime, timeframe], name: "ticker_opentime_timeframe")
}

model BacktestingJobs {
  id String @id

  UserId Int?
  user User? @relation(fields: [UserId], references: [id])
  
  environmentId Int?
  environment Environment? @relation(fields: [environmentId], references: [id])

  JobStarted DateTime
  JobFinished DateTime?
  JobStatus String?
  StrategyCode String @default("")
  params Json?
  resultTrades Json?
  resultPortfolio Json?
}

model StrategiesCode {
  id String @id @default(uuid())
  EnvironmentId Int
  environment Environment @relation(fields: [EnvironmentId], references: [id])
  
  Path String @default("")
  Text String @default("")

  createdAt DateTime @default(now())
  editedAt DateTime @default(now())
}

model Environment {
  id  Int @id @default(autoincrement())
  
  UserId Int
  user User @relation(fields: [UserId], references: [id])
  
  Name String @default("")

  Strategies StrategiesCode[]
  backTestingJobs BacktestingJobs[]
}

model User {
  id      Int      @id @default(autoincrement())
  email   String   @unique
  name    String?
  Jobs   BacktestingJobs[]
  Evironments Environment[]
}